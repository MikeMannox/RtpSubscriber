<DOMDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" width="700" currentTimeline="1" xflVersion="2.2" creatorInfo="Adobe Flash Professional CS6" platform="Macintosh" versionInfo="Saved by Adobe Flash Macintosh 12.0 build 537" majorVersion="12" buildNumber="537" gridSnapTo="true" pixelSnap="true" viewAngle3D="67.0521224560653" nextSceneIdentifier="2" playOptionsPlayLoop="false" playOptionsPlayPages="false" playOptionsPlayFrameActions="false">
     <folders>
          <DOMFolderItem name="Component Assets" itemID="44e488a0-000016d6"/>
          <DOMFolderItem name="Component Assets/_private" itemID="4573a4bc-000003c6"/>
          <DOMFolderItem name="Component Assets/ButtonSkins" itemID="44c91bad-00000231"/>
          <DOMFolderItem name="Component Assets/ScrollBarSkins" itemID="44ea2edf-000000a6"/>
          <DOMFolderItem name="Component Assets/Shared" itemID="44f892ff-0000001e"/>
          <DOMFolderItem name="Component Assets/TextAreaSkins" itemID="44ec8463-00000078"/>
          <DOMFolderItem name="Component Assets/TextInputSkins" itemID="44c91d04-00000282"/>
     </folders>
     <media>
          <DOMCompiledClipItem name="Component Assets/_private/ComponentShim" itemID="4d08cfa8-000001ee" linkageExportForAS="true" linkageClassName="fl.core.ComponentShim" sourceLastImported="1292423080" displayAsComponent="false" customIconID="0" actionscriptClass="fl.core.ComponentShim" swfScmHRef="kbx0udh422.swf" swfScmSourceFilename="C:\Users\jkamerer\AppData\Local\Adobe\Flash CS5.5\en_US\Configuration\TMPkavphdh40p..swf" persistLivePreview11="true" livePreview11ScmHRef="kbx0udh4221.swf" livePreview11ScmSourceFilename="C:\Users\jkamerer\AppData\Local\Adobe\Flash CS5.5\en_US\Configuration\TMPkavphdh40p..swf" editFrameIndex="1" requiredMinimumPlayerVersion="0" requiredMinimumASVersion="0" parametersAreLocked="true" swcPath="Component Assets/_private/ComponentShim.xml" rootSymbolLinkageID="fl.core.ComponentShim" playerVersion="9" actionscriptVersion="3" hashKey="k718tUOF1.A1OSpQnqdJJ0">
               <classProperties><![CDATA[<component id="fl/core/ComponentShim" class="fl.core.ComponentShim" modified="1292423059130">
<movieBounds xmin="0" xmax="0" ymin="0" ymax="0" />
<classDefs>
	<classDef id="fl.core.AccessibilityShim"/>
	<classDef id="fl.controls.CheckBox"/>
	<classDef id="fl.controls.LabelButton"/>
	<classDef id="fl.controls.List"/>
	<classDef id="fl.controls.ComboBox"/>
	<classDef id="fl.controls.ProgressBarDirection"/>
	<classDef id="fl.data.SimpleCollectionItem"/>
	<classDef id="fl.controls.TextArea"/>
	<classDef id="fl.display.ProLoaderInfo"/>
	<classDef id="fl.controls.Slider"/>
	<classDef id="fl.events.DataChangeEvent"/>
	<classDef id="fl.accessibility.ComboBoxAccImpl"/>
	<classDef id="fl.events.DataChangeType"/>
	<classDef id="fl.accessibility.TileListAccImpl"/>
	<classDef id="fl.accessibility.ButtonAccImpl"/>
	<classDef id="fl.controls.BaseButton"/>
	<classDef id="fl.core.UIComponent"/>
	<classDef id="fl.controls.DataGrid"/>
	<classDef id="fl.display.ProLoader"/>
	<classDef id="fl.containers.BaseScrollPane"/>
	<classDef id="fl.livepreview.LivePreviewParent"/>
	<classDef id="fl.controls.Label"/>
	<classDef id="fl.managers.IFocusManagerComponent"/>
	<classDef id="fl.controls.UIScrollBar"/>
	<classDef id="fl.controls.listClasses.ICellRenderer"/>
	<classDef id="fl.controls.ColorPicker"/>
	<classDef id="fl.controls.dataGridClasses.DataGridCellEditor"/>
	<classDef id="fl.managers.FocusManager"/>
	<classDef id="fl.events.ProLoaderRSLPreloaderSandboxEvent"/>
	<classDef id="fl.events.DataGridEventReason"/>
	<classDef id="fl.events.SliderEvent"/>
	<classDef id="fl.events.SliderEventClickTarget"/>
	<classDef id="fl.controls.progressBarClasses.IndeterminateBar"/>
	<classDef id="fl.controls.listClasses.ListData"/>
	<classDef id="fl.core.InvalidationType"/>
	<classDef id="fl.controls.NumericStepper"/>
	<classDef id="fl.controls.RadioButtonGroup"/>
	<classDef id="fl.accessibility.LabelButtonAccImpl"/>
	<classDef id="fl.containers.UILoader"/>
	<classDef id="fl.events.ColorPickerEvent"/>
	<classDef id="fl.controls.ButtonLabelPlacement"/>
	<classDef id="fl.accessibility.CheckBoxAccImpl"/>
	<classDef id="fl.controls.TileList"/>
	<classDef id="fl.managers.StyleManager"/>
	<classDef id="fl.controls.RadioButton"/>
	<classDef id="fl.containers.ScrollPane"/>
	<classDef id="fl.controls.listClasses.TileListData"/>
	<classDef id="fl.events.InteractionInputType"/>
	<classDef id="fl.controls.Button"/>
	<classDef id="fl.core.ComponentShim"/>
	<classDef id="fl.accessibility.UIComponentAccImpl"/>
	<classDef id="fl.controls.SelectableList"/>
	<classDef id="fl.events.ComponentEvent"/>
	<classDef id="fl.accessibility.RadioButtonAccImpl"/>
	<classDef id="fl.controls.listClasses.CellRenderer"/>
	<classDef id="fl.managers.IFocusManagerGroup"/>
	<classDef id="fl.controls.ScrollPolicy"/>
	<classDef id="fl.controls.ProgressBar"/>
	<classDef id="fl.controls.ScrollBar"/>
	<classDef id="fl.controls.listClasses.ImageCell"/>
	<classDef id="fl.managers.IFocusManager"/>
	<classDef id="fl.controls.ProgressBarMode"/>
	<classDef id="fl.accessibility.SelectableListAccImpl"/>
	<classDef id="fl.controls.TextInput"/>
	<classDef id="fl.events.ListEvent"/>
	<classDef id="fl.accessibility.AccImpl"/>
	<classDef id="fl.accessibility.DataGridAccImpl"/>
	<classDef id="fl.events.ScrollEvent"/>
	<classDef id="fl.controls.dataGridClasses.DataGridColumn"/>
	<classDef id="fl.events.DataGridEvent"/>
	<classDef id="fl.data.TileListCollectionItem"/>
	<classDef id="fl.data.DataProvider"/>
	<classDef id="fl.accessibility.ListAccImpl"/>
	<classDef id="fl.controls.dataGridClasses.HeaderRenderer"/>
	<classDef id="fl.controls.ScrollBarDirection"/>
	<classDef id="fl.controls.SliderDirection"/>
</classDefs>
<class id="fl.core.ComponentShim" >
	<method id="ComponentShim" isConstructor="true" isProperty="false">
	</method>
</class></component>
]]></classProperties>
               <customIcon>
                    <CustomIcon rowByteCount="72" colorDepth="32" width="18" height="18" frameRight="360" frameBottom="360" isTransparent="true" href="kbx0udh4222.dat"/>
               </customIcon>
               <SwcItem name="fl.core.ComponentShim" version="1292423059" isTopLevel="true"/>
          </DOMCompiledClipItem>
          <DOMVideoItem name="videoContainer" itemID="45abaccb-0000019d" sourceLastImported="1168878789" videoDataHRef="M 2 1507124411.dat" channels="0" isSpecial="true"/>
     </media>
     <symbols>
          <Include href="Button.xml" itemID="44a4944a-00000029" lastModified="1292423117"/>
          <Include href="Component Assets/_private/Component_avatar.xml" loadImmediate="false" itemID="44f89322-00000020" lastModified="1168286780"/>
          <Include href="Component Assets/ButtonSkins/Button_disabledSkin.xml" itemID="44a3379e-00000015" lastModified="1168286804"/>
          <Include href="Component Assets/ButtonSkins/Button_downSkin.xml" itemID="44a337b6-00000016" lastModified="1168286817"/>
          <Include href="Component Assets/ButtonSkins/Button_emphasizedSkin.xml" itemID="44d77ae1-0000001b" lastModified="1168286841"/>
          <Include href="Component Assets/ButtonSkins/Button_overSkin.xml" itemID="44a33775-00000013" lastModified="1168286854"/>
          <Include href="Component Assets/ButtonSkins/Button_selectedDisabledSkin.xml" itemID="44a3392f-0000001e" lastModified="1168286863"/>
          <Include href="Component Assets/ButtonSkins/Button_selectedDownSkin.xml" itemID="44a33885-0000001c" lastModified="1168286872"/>
          <Include href="Component Assets/ButtonSkins/Button_selectedOverSkin.xml" itemID="44a3384e-0000001a" lastModified="1168286879"/>
          <Include href="Component Assets/ButtonSkins/Button_selectedUpSkin.xml" itemID="44a3380d-00000018" lastModified="1168286889"/>
          <Include href="Component Assets/ButtonSkins/Button_upSkin.xml" itemID="44a3377f-00000014" lastModified="1168286905"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowDown_disabledSkin.xml" itemID="4399b48a-00008d0a" lastModified="1168289950"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowDown_downSkin.xml" itemID="4399b4a4-00008e29" lastModified="1168289961"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowDown_icon.xml" itemIcon="1" loadImmediate="false" itemID="456df1e4-00000190" lastModified="1168289966"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowDown_overSkin.xml" itemID="4399c50b-00008f6e" lastModified="1168290195"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowDown_upSkin.xml" itemID="4399c519-0000900f" lastModified="1168290217"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowUp_disabledSkin.xml" itemID="4399b493-00008d74" lastModified="1168290230"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowUp_downSkin.xml" itemID="4399c54a-00009130" lastModified="1168290244"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowUp_icon.xml" itemIcon="1" loadImmediate="false" itemID="456df209-00000192" lastModified="1168290248"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowUp_overSkin.xml" itemID="4399c55c-000091cd" lastModified="1168290260"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollArrowUp_upSkin.xml" itemID="4399c568-00009256" lastModified="1168290275"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollBar_thumbIcon.xml" itemID="442a68fb-00006a9d" lastModified="1164927281"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollThumb_downSkin.xml" itemID="4399c5a6-000092e7" lastModified="1168290280"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollThumb_overSkin.xml" itemID="4399c5b6-00009358" lastModified="1168290288"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollThumb_upSkin.xml" itemID="4399c5d1-000093e9" lastModified="1168290292"/>
          <Include href="Component Assets/ScrollBarSkins/ScrollTrack_skin.xml" itemID="44fdb956-000002bc" lastModified="1168290301"/>
          <Include href="Component Assets/Shared/arrowIcon.xml" itemIcon="1" loadImmediate="false" itemID="456df449-0000019f" lastModified="1168290350"/>
          <Include href="Component Assets/Shared/focusRectSkin.xml" itemID="44d8b6f8-00000055" lastModified="1168290361"/>
          <Include href="Component Assets/TextAreaSkins/TextArea_disabledSkin.xml" itemID="44d8caf3-000000d9" lastModified="1168290416"/>
          <Include href="Component Assets/TextAreaSkins/TextArea_upSkin.xml" itemID="44d8cafd-000000da" lastModified="1168290422"/>
          <Include href="Component Assets/TextInputSkins/TextInput_disabledSkin.xml" itemID="44b148ab-000000ee" lastModified="1168290428"/>
          <Include href="Component Assets/TextInputSkins/TextInput_upSkin.xml" itemID="44b148bb-000000ef" lastModified="1168290434"/>
          <Include href="TextArea.xml" itemID="44d8c4d1-000000c9" lastModified="1292423118"/>
          <Include href="TextInput.xml" itemID="44b159e1-000000fd" lastModified="1292423118"/>
          <Include href="UIScrollBar.xml" itemID="44aaa686-00000064" lastModified="1292423118"/>
     </symbols>
     <timelines>
          <DOMTimeline name="Scene 1">
               <layers>
                    <DOMLayer name="Actionscript" color="#000000" locked="true" current="true" isSelected="true" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <Actionscript>
                                        <script><![CDATA[import flash.events.AsyncErrorEvent;
import flash.events.NetStatusEvent;
import flash.net.NetConnection;
import flash.net.NetStream;
import flash.media.Video;
import flash.events.MouseEvent;

var connection:NetConnection;
var stream:NetStream;
var textAreaData:String = "";

function handleAddedToStage() {
	//trace("handleAddedToStage");
	Security.allowDomain('http://192.168.1.4');
	Security.allowInsecureDomain("http://192.168.1.4");
	subscribeButton.addEventListener(MouseEvent.MOUSE_UP,handleSubscribeClick,false,0,true );
	stopButton.addEventListener(MouseEvent.MOUSE_UP,handleStopClick,false,0,true );
	clearButton.addEventListener(MouseEvent.MOUSE_UP,handleClearLogClick,false,0,true );
}

function configConnection() {
	var clientListener = new Object();
	clientListener.onBWDone = handleBWDone;
	connection = new NetConnection();
	connection.client = clientListener;
	connection.addEventListener(NetStatusEvent.NET_STATUS, handleConnectionStatus);
	connection.addEventListener(AsyncErrorEvent.ASYNC_ERROR, handleAsyncError);
	connection.addEventListener(SecurityErrorEvent.SECURITY_ERROR, handleSecurityError);
	connection.connect(serverUrl.text);
}

function connectStream():void {
	var clientListener = new Object();
	clientListener.onMetaData = handleMetaData;
	clientListener.onCuePoint = handleCuePoint;
	stream = new NetStream(connection);
	stream.addEventListener(NetStatusEvent.NET_STATUS, handleNetStatus);
	stream.addEventListener( AsyncErrorEvent.ASYNC_ERROR , handleAsyncError , false , 0 , true );
	stream.client = clientListener;
	stream.play(streamName.text, -1);
	videoContainer.attachNetStream(stream);
}

function handleSubscribeClick(event:MouseEvent):void {
	//trace("handleSubscribeClick " + serverUrl.text + streamName.text);
	configConnection();	
	subscribeButton.enabled = false;
	stopButton.enabled = true;
}

function handleStopClick(event:MouseEvent):void {
	//trace("handleStopClick");
	stream.close();
	videoContainer.clear();
	subscribeButton.enabled = true;
	stopButton.enabled = false;
}

function handleClearLogClick(event:MouseEvent):void {
	textAreaData = "";
	textArea.text = "";
}

function handleMetaData( info : Object ):void {
	//trace( "handleMetaData ()");
	textAreaData +=  "\rMetaData:\r";
	for (var i:String in info) {
		//trace("\t"+i+ ':'+ info[i]);
		textAreaData +=  "\t" + i + ':' + info[i] + "\r";
	}
	appendText(textAreaData);
}

function handleCuePoint( info : Object ):void {
	//trace( "handleCuePoint ()");
	textAreaData +=  "\rCuePoint:\r";
	for (var i:String in info) {
		//trace("\t"+i+ ':'+ info[i]);
		textAreaData +=  "\t" + i + ':' + info[i] + "\r";
	}
	appendText(textAreaData);
}

function handleBWDone(...rest):void {
	//trace("handleBWDone()");
	textAreaData +=  "\rBWDone:\r";
	var p_bw:Number;
	if (rest.length > 0) {
		p_bw = rest[0];
	}
	textAreaData +=  "\t" + "bandwidth = " + p_bw + " Kbps" + "\r";
	appendText(textAreaData);
}

function handleAsyncError( event : AsyncErrorEvent ):void {
	//trace( "handleAsyncError ()"+event );
	textAreaData +=  "\rAsyncError:\r" + "\t" + event + "\r";
	appendText(textAreaData);
}

function handleSecurityError(event:SecurityErrorEvent):void {
	//trace("securityErrorHandler: " + event);
	textAreaData +=  "\rSecurityError:\r" + "\t" + event + "\r";
	appendText(textAreaData);
}

function handlePlayStatus( info : Object ):void {
	//trace("handlePlayStatus ()");
	textAreaData +=  "\rPlayStatus:\r";
	for (var i:String in info) {
		//trace("\t"+i+ ':'+ info[i]);
		textAreaData +=  "\t" + i + ':' + info[i] + "\r";
	}
	appendText(textAreaData);
}

function handleConnectionStatus(event:NetStatusEvent) {
	//trace("handleConnectionStatus ()");
	textAreaData +=  "\rConnectionStatus:\r";
	for (var i:String in event.info) {
		//trace("\t"+i+ ':'+ event.info[i]);
		textAreaData +=  "\t" + i + ':' + event.info[i] + "\r";
	}
	appendText(textAreaData);
	if (event.info.code == "NetConnection.Connect.Success") {
		connectStream();
	}
}
var _netStatusCode:String;
function handleNetStatus( event : NetStatusEvent ):void {
	textAreaData +=  "\rNetStatus:\r";
	for (var i:String in event.info) {
		//trace("\t"+i+ ':'+ event.info[i]);
		textAreaData +=  "\t" + i + ':' + event.info[i] + "\r";
	}
	if (_netStatusCode != event.info.code) {
		//trace('handleNetStatus () '+ event.info.details);
		_netStatusCode = event.info.code;
	}
	switch ( event.info.code ) {
			/*==========[ BUFFER NOTIFICATIONS ]=================*/
		case "NetStream.Buffer.Full" :
			break;
		case "NetStream.Buffer.Empty" :
			break;
			/*==========[ PLAYBACK NOTIFICATIONS ]=================*/
		case "NetStream.Play.Stop" :
		case "NetStream.Play.Failed" :
		case "NetStream.Play.Reset" :
			break;
		case "NetStream.Play.Start" :
			//dispatchEvent ( new StreamEvent ( StreamEvent.PLAY_START ) );
			break;
		case "NetStream.Play.StreamNotFound" :
		case "NetStream.Pause.Notify" :
		case "NetStream.Unpause.Notify" :
		case "NetStream.Seek.Failed" :
		case "NetStream.Seek.Notify" :
			break;
		case "NetStream.Seek.InvalidTime" :
			trace('\t'+event.info.details);
			break;
			/*==========[ PUBLISH NOTIFICATIONS ]=================*/
		case "NetStream.Publish.Start" :
		case "NetStream.Publish.BadName" :
		case "NetStream.Publish.Idle" :
		case "NetStream.Play.PublishNotify" :
		case "NetStream.Play.UnpublishNotify" :
		case "NetStream.Unpublish.Success" :
			break;
			/*==========[ RECORD NOTIFICATIONS ]=================*/
		case "NetStream.Record.Failed" :
		case "NetStream.Record.Start" :
		case "NetStream.Record.NoAccess" :
		case "NetStream.Record.Stop" :
			break;
			/*==========[ UNSPECIFIED ERROR NOTIFICATIONS ]=================*/
		case "NetStream.Failed" :
			break;
	}
	appendText(textAreaData);
}

function appendText(data:String){
	textArea.text = data;
	textArea.textField.scrollV = textArea.textField.maxScrollV;
}

//addEventListener(Event.ADDED_TO_STAGE,handleAddedToStage );// , false , 0 , true
handleAddedToStage();
stop();]]></script>
                                   </Actionscript>
                                   <elements/>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
                    <DOMLayer name="textFields" color="#9933CC" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <elements>
                                        <DOMComponentInstance libraryItemName="Button" name="subscribeButton" centerPoint3DX="60" centerPoint3DY="360" uniqueID="8">
                                             <matrix>
                                                  <Matrix tx="10" ty="349"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="11"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='8'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="emphasized">
      <Inspectable name="emphasized" variable="emphasized" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="label">
      <Inspectable name="label" variable="label" category="" verbose="0" defaultValue="subscribe" type="String"/>
   </property>
   <property id="labelPlacement">
      <Inspectable name="labelPlacement" variable="labelPlacement" category="" verbose="0" defaultValue="right" enumeration="left,right,top,bottom" type="List"/>
   </property>
   <property id="selected">
      <Inspectable name="selected" variable="selected" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="toggle">
      <Inspectable name="toggle" variable="toggle" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                        <DOMComponentInstance libraryItemName="Button" name="clearButton" centerPoint3DX="280" centerPoint3DY="360" uniqueID="10">
                                             <matrix>
                                                  <Matrix tx="230" ty="349"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="11"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='10'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="emphasized">
      <Inspectable name="emphasized" variable="emphasized" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="label">
      <Inspectable name="label" variable="label" category="" verbose="0" defaultValue="clear log" type="String"/>
   </property>
   <property id="labelPlacement">
      <Inspectable name="labelPlacement" variable="labelPlacement" category="" verbose="0" defaultValue="right" enumeration="left,right,top,bottom" type="List"/>
   </property>
   <property id="selected">
      <Inspectable name="selected" variable="selected" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="toggle">
      <Inspectable name="toggle" variable="toggle" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                        <DOMComponentInstance libraryItemName="TextInput" name="serverUrl" centerPoint3DX="170" centerPoint3DY="21" uniqueID="12">
                                             <matrix>
                                                  <Matrix a="3.199951171875" tx="10" ty="10"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="11"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='12'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="displayAsPassword">
      <Inspectable name="displayAsPassword" variable="displayAsPassword" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="editable">
      <Inspectable name="editable" variable="editable" category="" verbose="0" defaultValue="true" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="maxChars">
      <Inspectable name="maxChars" variable="maxChars" category="" verbose="0" defaultValue="0" type="Number"/>
   </property>
   <property id="restrict">
      <Inspectable name="restrict" variable="restrict" category="" verbose="0" defaultValue="" type="String"/>
   </property>
   <property id="text">
      <Inspectable name="text" variable="text" category="" verbose="0" defaultValue="rtmp://192.168.1.4/oflaDemo/" type="String"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                        <DOMComponentInstance libraryItemName="TextInput" name="streamName" centerPoint3DX="170" centerPoint3DY="51" uniqueID="13">
                                             <matrix>
                                                  <Matrix a="3.199951171875" tx="10" ty="40"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="11"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='13'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="displayAsPassword">
      <Inspectable name="displayAsPassword" variable="displayAsPassword" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="editable">
      <Inspectable name="editable" variable="editable" category="" verbose="0" defaultValue="true" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="maxChars">
      <Inspectable name="maxChars" variable="maxChars" category="" verbose="0" defaultValue="0" type="Number"/>
   </property>
   <property id="restrict">
      <Inspectable name="restrict" variable="restrict" category="" verbose="0" defaultValue="" type="String"/>
   </property>
   <property id="text">
      <Inspectable name="text" variable="text" category="" verbose="0" defaultValue="red5StreamDemo" type="String"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                        <DOMComponentInstance libraryItemName="TextArea" name="textArea" centerPoint3DX="376.6" centerPoint3DY="44.8" uniqueID="2">
                                             <matrix>
                                                  <Matrix a="3.49998474121094" d="8.63633728027344" tx="340" ty="10"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="22"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='2'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="condenseWhite">
      <Inspectable name="condenseWhite" variable="condenseWhite" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="editable">
      <Inspectable name="editable" variable="editable" category="" verbose="0" defaultValue="true" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="horizontalScrollPolicy">
      <Inspectable name="horizontalScrollPolicy" variable="horizontalScrollPolicy" category="" verbose="0" defaultValue="auto" enumeration="auto,on,off" type="List"/>
   </property>
   <property id="htmlText">
      <Inspectable name="htmlText" variable="htmlText" category="" verbose="0" defaultValue="" type="String"/>
   </property>
   <property id="maxChars">
      <Inspectable name="maxChars" variable="maxChars" category="" verbose="0" defaultValue="0" type="Number"/>
   </property>
   <property id="restrict">
      <Inspectable name="restrict" variable="restrict" category="" verbose="0" defaultValue="" type="String"/>
   </property>
   <property id="text">
      <Inspectable name="text" variable="text" category="" verbose="0" defaultValue="" type="String"/>
   </property>
   <property id="verticalScrollPolicy">
      <Inspectable name="verticalScrollPolicy" variable="verticalScrollPolicy" category="" verbose="0" defaultValue="on" enumeration="auto,on,off" type="List"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="wordWrap">
      <Inspectable name="wordWrap" variable="wordWrap" category="" verbose="0" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                        <DOMComponentInstance libraryItemName="Button" name="stopButton" centerPoint3DX="170" centerPoint3DY="360" uniqueID="1">
                                             <matrix>
                                                  <Matrix tx="120" ty="349"/>
                                             </matrix>
                                             <transformationPoint>
                                                  <Point x="50" y="11"/>
                                             </transformationPoint>
                                             <dataBindingXML><![CDATA[<component metaDataFetched='true' schemaUrl='' schemaOperation='' sceneRootLabel='Scene 1' oldCopiedComponentPath='1'>
</component>
]]></dataBindingXML>
                                             <parametersAsXML><![CDATA[   <property id="emphasized">
      <Inspectable name="emphasized" variable="emphasized" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="enabled">
      <Inspectable name="enabled" variable="enabled" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
   <property id="label">
      <Inspectable name="label" variable="label" category="" verbose="0" defaultValue="stop" type="String"/>
   </property>
   <property id="labelPlacement">
      <Inspectable name="labelPlacement" variable="labelPlacement" category="" verbose="0" defaultValue="right" enumeration="left,right,top,bottom" type="List"/>
   </property>
   <property id="selected">
      <Inspectable name="selected" variable="selected" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="toggle">
      <Inspectable name="toggle" variable="toggle" category="" verbose="0" defaultValue="false" type="Boolean"/>
   </property>
   <property id="visible">
      <Inspectable name="visible" variable="visible" category="" verbose="1" defaultValue="true" type="Boolean"/>
   </property>
]]></parametersAsXML>
                                        </DOMComponentInstance>
                                   </elements>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
                    <DOMLayer name="video" color="#00FF00" locked="true" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <elements>
                                        <DOMVideoInstance libraryItemName="videoContainer" name="videoContainer" frameRight="3200" frameBottom="2400">
                                             <matrix>
                                                  <Matrix a="2" d="2" tx="10" ty="90"/>
                                             </matrix>
                                        </DOMVideoInstance>
                                   </elements>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
                    <DOMLayer name="video frame" color="#FF4FFF" locked="true" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <elements>
                                        <DOMGroup>
                                             <members>
                                                  <DOMShape>
                                                       <strokes>
                                                            <StrokeStyle index="1">
                                                                 <SolidStroke scaleMode="normal">
                                                                      <fill>
                                                                           <SolidColor color="#00FF00"/>
                                                                      </fill>
                                                                 </SolidStroke>
                                                            </StrokeStyle>
                                                       </strokes>
                                                       <edges>
                                                            <Edge strokeStyle="1" edges="!200 1800|211 1810!211 1810|6610 1810!6610 1810|6610 6610!6610 6610|210 6610!210 6610|210 1810!210 1810|211 1810!6610 6610|3410 4210!3410 4210|210 6610!211 1810|3410 4210!3410 4210|6610 1810"/>
                                                       </edges>
                                                  </DOMShape>
                                             </members>
                                        </DOMGroup>
                                   </elements>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
                    <DOMLayer name="background" color="#4FFFFF" locked="true" autoNamed="false">
                         <frames>
                              <DOMFrame index="0" keyMode="9728">
                                   <elements>
                                        <DOMShape>
                                             <fills>
                                                  <FillStyle index="1">
                                                       <LinearGradient>
                                                            <matrix>
                                                                 <Matrix a="0.0006866455078125" b="0.67462158203125" c="-0.360336303710938" d="0.000213623046875" tx="359.45" ty="431"/>
                                                            </matrix>
                                                            <GradientEntry color="#FFFFFF" ratio="0"/>
                                                            <GradientEntry color="#AAAAAA" ratio="1"/>
                                                       </LinearGradient>
                                                  </FillStyle>
                                             </fills>
                                             <edges>
                                                  <Edge fillStyle0="1" edges="!14000 0|0 0!0 0|0 8000!0 8000|14000 8000!14000 8000|14000 0"/>
                                             </edges>
                                        </DOMShape>
                                   </elements>
                              </DOMFrame>
                         </frames>
                    </DOMLayer>
               </layers>
          </DOMTimeline>
     </timelines>
     <PrinterSettings platform="macintosh"/>
     <publishHistory>
          <PublishItem publishSize="29166" publishTime="1507320423"/>
          <PublishItem publishSize="29159" publishTime="1507320361"/>
     </publishHistory>
     <swcCache>
          <Swc hashKey="k718tUOF1.A1OSpQnqdJJ0" href="OD1JZXAWND.swc">
               <classDefinitions>
                    <ClassDefinition value="fl.core.AccessibilityShim"/>
                    <ClassDefinition value="fl.controls.CheckBox"/>
                    <ClassDefinition value="fl.controls.LabelButton"/>
                    <ClassDefinition value="fl.controls.List"/>
                    <ClassDefinition value="fl.controls.ComboBox"/>
                    <ClassDefinition value="fl.controls.ProgressBarDirection"/>
                    <ClassDefinition value="fl.data.SimpleCollectionItem"/>
                    <ClassDefinition value="fl.controls.TextArea"/>
                    <ClassDefinition value="fl.display.ProLoaderInfo"/>
                    <ClassDefinition value="fl.controls.Slider"/>
                    <ClassDefinition value="fl.events.DataChangeEvent"/>
                    <ClassDefinition value="fl.accessibility.ComboBoxAccImpl"/>
                    <ClassDefinition value="fl.events.DataChangeType"/>
                    <ClassDefinition value="fl.accessibility.TileListAccImpl"/>
                    <ClassDefinition value="fl.accessibility.ButtonAccImpl"/>
                    <ClassDefinition value="fl.controls.BaseButton"/>
                    <ClassDefinition value="fl.core.UIComponent"/>
                    <ClassDefinition value="fl.controls.DataGrid"/>
                    <ClassDefinition value="fl.display.ProLoader"/>
                    <ClassDefinition value="fl.containers.BaseScrollPane"/>
                    <ClassDefinition value="fl.livepreview.LivePreviewParent"/>
                    <ClassDefinition value="fl.controls.Label"/>
                    <ClassDefinition value="fl.managers.IFocusManagerComponent"/>
                    <ClassDefinition value="fl.controls.UIScrollBar"/>
                    <ClassDefinition value="fl.controls.listClasses.ICellRenderer"/>
                    <ClassDefinition value="fl.controls.ColorPicker"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.DataGridCellEditor"/>
                    <ClassDefinition value="fl.managers.FocusManager"/>
                    <ClassDefinition value="fl.events.ProLoaderRSLPreloaderSandboxEvent"/>
                    <ClassDefinition value="fl.events.DataGridEventReason"/>
                    <ClassDefinition value="fl.events.SliderEvent"/>
                    <ClassDefinition value="fl.events.SliderEventClickTarget"/>
                    <ClassDefinition value="fl.controls.progressBarClasses.IndeterminateBar"/>
                    <ClassDefinition value="fl.controls.listClasses.ListData"/>
                    <ClassDefinition value="fl.core.InvalidationType"/>
                    <ClassDefinition value="fl.controls.NumericStepper"/>
                    <ClassDefinition value="fl.controls.RadioButtonGroup"/>
                    <ClassDefinition value="fl.accessibility.LabelButtonAccImpl"/>
                    <ClassDefinition value="fl.containers.UILoader"/>
                    <ClassDefinition value="fl.events.ColorPickerEvent"/>
                    <ClassDefinition value="fl.controls.ButtonLabelPlacement"/>
                    <ClassDefinition value="fl.accessibility.CheckBoxAccImpl"/>
                    <ClassDefinition value="fl.controls.TileList"/>
                    <ClassDefinition value="fl.managers.StyleManager"/>
                    <ClassDefinition value="fl.controls.RadioButton"/>
                    <ClassDefinition value="fl.containers.ScrollPane"/>
                    <ClassDefinition value="fl.controls.listClasses.TileListData"/>
                    <ClassDefinition value="fl.events.InteractionInputType"/>
                    <ClassDefinition value="fl.controls.Button"/>
                    <ClassDefinition value="fl.core.ComponentShim"/>
                    <ClassDefinition value="fl.accessibility.UIComponentAccImpl"/>
                    <ClassDefinition value="fl.controls.SelectableList"/>
                    <ClassDefinition value="fl.events.ComponentEvent"/>
                    <ClassDefinition value="fl.accessibility.RadioButtonAccImpl"/>
                    <ClassDefinition value="fl.controls.listClasses.CellRenderer"/>
                    <ClassDefinition value="fl.managers.IFocusManagerGroup"/>
                    <ClassDefinition value="fl.controls.ScrollPolicy"/>
                    <ClassDefinition value="fl.controls.ProgressBar"/>
                    <ClassDefinition value="fl.controls.ScrollBar"/>
                    <ClassDefinition value="fl.controls.listClasses.ImageCell"/>
                    <ClassDefinition value="fl.managers.IFocusManager"/>
                    <ClassDefinition value="fl.controls.ProgressBarMode"/>
                    <ClassDefinition value="fl.accessibility.SelectableListAccImpl"/>
                    <ClassDefinition value="fl.controls.TextInput"/>
                    <ClassDefinition value="fl.events.ListEvent"/>
                    <ClassDefinition value="fl.accessibility.AccImpl"/>
                    <ClassDefinition value="fl.accessibility.DataGridAccImpl"/>
                    <ClassDefinition value="fl.events.ScrollEvent"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.DataGridColumn"/>
                    <ClassDefinition value="fl.events.DataGridEvent"/>
                    <ClassDefinition value="fl.data.TileListCollectionItem"/>
                    <ClassDefinition value="fl.data.DataProvider"/>
                    <ClassDefinition value="fl.accessibility.ListAccImpl"/>
                    <ClassDefinition value="fl.controls.dataGridClasses.HeaderRenderer"/>
                    <ClassDefinition value="fl.controls.ScrollBarDirection"/>
                    <ClassDefinition value="fl.controls.SliderDirection"/>
               </classDefinitions>
          </Swc>
     </swcCache>
</DOMDocument>